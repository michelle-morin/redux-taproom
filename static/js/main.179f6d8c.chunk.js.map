{"version":3,"sources":["assets/beer.png","components/Header.js","components/NewKegForm.js","components/Keg.js","components/TapList.js","components/BeerImage.js","components/KegDetail.js","components/TapControl.js","actions/index.js","actions/ActionTypes.js","components/Footer.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/tap-list-reducer.js","reducers/form-visible-reducer.js","reducers/selected-keg-reducer.js","index.js"],"names":["module","exports","Header","className","style","position","top","left","width","height","display","alignItems","justifyContent","flexWrap","borderBottom","color","fontFamily","NewKegForm","props","marginTop","Form","onSubmit","event","preventDefault","onNewKegCreation","name","target","value","brewery","alcoholContent","parseInt","ibu","price","pintQuantity","kegTappedDate","Date","now","id","v4","Group","Control","type","placeholder","required","Button","Keg","quantity","Card","textAlign","border","padding","margin","boxShadow","onClick","whenBuyClicked","whenKegClicked","TapList","Object","values","tapList","sort","a","b","map","keg","onClickingBuy","onKegSelection","key","BeerImage","src","beer","alt","KegDetail","onClickingDelete","Container","toLocaleString","isDeletable","tapControlStyles","marginLeft","marginRight","marginBottom","paddingBottom","TapControl","dispatch","currentlyVisibleState","buttonText","selectedKeg","action","formVisible","newKeg","masterKegList","connect","state","Footer","bottom","backgroundColor","paddingLeft","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","assign","newTapList","soldKegPintQuantity","updatedTapList","newState","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.179f6d8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beer.035cf0e7.png\";","import React from 'react';\n\nfunction Header(){\n  const headerStyles = {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100vw',\n    height: '30vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    borderBottom: '3px solid rgb(70,108,82)',\n    color:  '#f6f6f2',\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n  }\n\n  return (\n    <div className=\"header\" style={headerStyles}>\n      <h1>REACT ON TAP</h1>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nfunction NewKegForm(props) {\n\n  function handleNewKegFormSubmission(event){\n    event.preventDefault();\n    props.onNewKegCreation({name: event.target.name.value, brewery: event.target.brewery.value, alcoholContent: parseInt(event.target.alcoholContent.value), ibu: parseInt(event.target.ibu.value), price: parseInt(event.target.price.value), pintQuantity: 124, kegTappedDate: Date.now(), id: v4()});\n  }\n\n  const newKegFormStyles = {\n    marginTop: '2%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap'\n  }\n\n  return (\n    <div style={newKegFormStyles}>\n      <Form onSubmit={handleNewKegFormSubmission}>\n        <Form.Group>\n          <Form.Control type='text' name='name' placeholder='brew name' required />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type='text' name='brewery' placeholder='brewery' required/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type='number' name='alcoholContent' placeholder='ABV' required />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type='number' name='ibu' placeholder='IBU' required />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type='number' name='price' placeholder='price' required />\n        </Form.Group>\n        <Button className=\"new-keg-button\" type=\"submit\">ADD KEG</Button>\n      </Form>\n    </div>\n  );\n}\n\nNewKegForm.propTypes = {\n  onNewKegCreation: PropTypes.func\n}\n\nexport default NewKegForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card } from 'react-bootstrap';\n\nfunction Keg(props) {\n\n  function inStock(quantity) {\n    return quantity > 10 ? <Button className=\"buy-button\" onClick={() => props.whenBuyClicked(props.id)}>BUY</Button>\n    : quantity <= 10 && quantity > 0 ? <Button className=\"buy-button almost-gone\" onClick={() => props.whenBuyClicked(props.id)}>BUY(ALMOST GONE!)</Button>\n    : <p className=\"empty-keg\">keg is empty!</p>\n  };\n\n  const kegStyles = {\n    textAlign: 'center',\n    border: '2px solid rgb(70,108,82)',\n    width: '400px',\n    height: '400px',\n    padding: '2%',\n    margin: '1%',\n    boxShadow: '0 2px 4px 0 rgba(0,0,0,0.10)'\n  };\n\n  return(\n    <Card style={kegStyles} id={props.id}>\n      <h2 className=\"beer-name\">{props.name}</h2>\n      <p>{props.brewery}</p>\n      <p>ABV: {props.alcoholContent}% | IBU: {props.ibu}</p>\n      <p>${props.price} per pint</p>\n      {inStock(props.pintQuantity)}\n      <Button className=\"details-button\" onClick = {()=> props.whenKegClicked(props.id)}>DETAILS</Button>\n    </Card>\n  );\n}\n\nKeg.propTypes = {\n  name: PropTypes.string,\n  brewery: PropTypes.string,\n  alcoholContent: PropTypes.number,\n  ibu: PropTypes.number,\n  price: PropTypes.number,\n  pintQuantity: PropTypes.number,\n  kegTappedDate: PropTypes.number,\n  id: PropTypes.string,\n  whenKegClicked: PropTypes.func,\n  whenBuyClicked: PropTypes.func\n}\n\nexport default Keg;","import React from 'react';\nimport Keg from './Keg';\nimport PropTypes from 'prop-types';\n\nfunction TapList(props){\n\n  const tapListStyles = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap'\n  }\n\n  return(\n    <div style={tapListStyles}>\n      {Object.values(props.tapList).sort((a,b) => {\n        return (a.kegTappedDate - b.kegTappedDate);\n      }).map((keg) => {\n        return (\n          <Keg whenBuyClicked = {props.onClickingBuy}\n            whenKegClicked = {props.onKegSelection}\n            name={keg.name}\n            brewery={keg.brewery}\n            alcoholContent={keg.alcoholContent}\n            ibu={keg.ibu}\n            price={keg.price}\n            pintQuantity={keg.pintQuantity}\n            kegTappedDate={keg.kegTappedDate}\n            id={keg.id}\n            key={keg.id} />\n        );\n      })}\n    </div>\n  );\n}\n\nTapList.propTypes = {\n  tapList: PropTypes.object,\n  onKegSelection: PropTypes.func,\n  onClickingBuy: PropTypes.func\n}\n\nexport default TapList;","import React from 'react';\nimport beer from '../assets/beer.png';\n\nfunction BeerImage(){\n  return (\n    <img className=\"beer-image\" src={beer} alt=\"illustration of hand holding a beer\"/>\n  );\n}\n\nexport default BeerImage;","import React from \"react\";\nimport BeerImage from './BeerImage';\nimport PropTypes from 'prop-types';\nimport { Container, Button } from 'react-bootstrap';\n\nfunction KegDetail(props){\n  const { keg, onClickingDelete } = props;\n\n  const kegDetailStyles = {\n    marginTop: '2%',\n    textAlign: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n\n  function isDeletable(quantity) {\n    if (quantity <= 0) {\n      return <Button className=\"delete-button\" onClick={()=> onClickingDelete(keg.id)}>DELETE KEG</Button>\n    }\n  };\n\n  return (\n    <Container style={kegDetailStyles}>\n      <BeerImage />\n      <div className=\"beer-details\">\n        <h1>{keg.name}</h1>\n        <p>Brewed by: {keg.brewery}</p>\n        <p>ABV: {keg.alcoholContent}% | IBU: {keg.ibu}</p>\n        <p>${keg.price} per pint</p>\n        <p>Pints in keg: {keg.pintQuantity}</p>\n        <p>Tapped on {new Date(keg.kegTappedDate).toLocaleString()}</p>\n        {isDeletable(keg.pintQuantity)}\n      </div>\n    </Container>\n  );\n}\n\nKegDetail.propTypes = {\n  keg: PropTypes.object,\n  onClickingDelete: PropTypes.func\n}\n\nexport default KegDetail;","import React from 'react';\nimport NewKegForm from './NewKegForm';\nimport TapList from './TapList';\nimport KegDetail from './KegDetail';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport * as a from '../actions';\n\nconst tapControlStyles = {\n  position: 'relative',\n  top: '30vh',\n  width: '80vw',\n  height: 'auto',\n  marginTop: '2vh',\n  marginLeft: '10vw',\n  marginRight: '10vw',\n  marginBottom: '10%',\n  paddingBottom: '3%'\n}\n\nfunction TapControl(props) {\n  const { dispatch } = props;\n\n  const handleClick = () => {\n    if (props.selectedKeg != null) {\n      const action = a.unselectKeg();\n      dispatch(action);\n    } else {\n      const action = a.toggleForm();\n      dispatch(action);\n    }\n  };\n\n  const handleAddingNewKegToList = (newKeg) => {\n    const action = a.addKeg(newKeg);\n    dispatch(action);\n    const actionTwo = a.toggleForm();\n    dispatch(actionTwo);\n  };\n\n  const handleChangingSelectedKeg = (id) => {\n    const selectedKeg = props.masterKegList[id];\n    const action = a.changeSelected(selectedKeg);\n    dispatch(action);\n  };\n\n  const handleKegPurchase = (id) => {\n    const action = a.sellKeg(id);\n    dispatch(action);\n    const actionTwo = a.unselectKeg();\n    dispatch(actionTwo);\n  };\n\n  const handleDeletingKeg = (id) => {\n    const action = a.deleteKeg(id);\n    dispatch(action);\n    const actionTwo = a.unselectKeg();\n    dispatch(actionTwo);\n  };\n\n  let currentlyVisibleState = null;\n  let buttonText = null;\n\n  if (props.selectedKeg != null) {\n    currentlyVisibleState = <KegDetail \n      keg={props.selectedKeg}\n      onClickingDelete = {handleDeletingKeg} />\n    buttonText = \"RETURN TO TAP LIST\";\n  } else if (props.formVisible) {\n    currentlyVisibleState = <NewKegForm \n      onNewKegCreation={handleAddingNewKegToList} />\n    buttonText = \"RETURN TO TAP LIST\";\n  } else {\n    currentlyVisibleState = <TapList \n      tapList={props.masterKegList}\n      onKegSelection={handleChangingSelectedKeg}\n      onClickingBuy={handleKegPurchase} />\n    buttonText = \"+ NEW KEG\";\n  }\n\n  return(\n    <div style={tapControlStyles}>\n      <Button className=\"reused-button\" onClick={handleClick}>{buttonText}</Button>\n      {currentlyVisibleState}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    masterKegList: state.masterKegList,\n    formVisible: state.formVisible,\n    selectedKeg: state.selectedKeg\n  }\n};\n\nTapControl.propTypes = {\n  masterKegList: PropTypes.object,\n  selectedKeg: PropTypes.object,\n  formVisible: PropTypes.bool\n}\n\n// eslint-disable-next-line\nTapControl = connect(mapStateToProps)(TapControl);\n\nexport default TapControl;","import * as c from './ActionTypes';\n\nexport const toggleForm = () => ({\n  type: c.TOGGLE_FORM\n});\n\nexport const unselectKeg = () => ({\n  type: c.UNSELECT_KEG\n});\n\nexport const deleteKeg = (id) => ({\n  type: c.DELETE_KEG,\n  id: id\n});\n\nexport const sellKeg = (id) => ({\n  type: c.SELL_KEG,\n  id: id\n});\n\nexport const changeSelected = (keg) => {\n  const { name, brewery, alcoholContent, ibu, price, pintQuantity, kegTappedDate, id } = keg;\n  return {\n    type: c.CHANGE_SELECTED,\n    name: name,\n    brewery: brewery,\n    alcoholContent: alcoholContent,\n    ibu: ibu,\n    price: price,\n    pintQuantity: pintQuantity,\n    kegTappedDate: kegTappedDate,\n    id: id\n  }\n};\n\nexport const addKeg = (keg) => {\n  const { name, brewery, alcoholContent, ibu, price, pintQuantity, kegTappedDate, id } = keg;\n  return {\n    type: c.ADD_KEG,\n    name: name,\n    brewery: brewery,\n    alcoholContent: alcoholContent,\n    ibu: ibu,\n    price: price,\n    pintQuantity: pintQuantity,\n    kegTappedDate: kegTappedDate,\n    id: id\n  }\n};\n","export const TOGGLE_FORM = 'TOGGLE_FORM';\nexport const CHANGE_SELECTED = 'CHANGE_SELECTED';\nexport const UNSELECT_KEG = 'UNSELECT_KEG';\nexport const ADD_KEG = 'ADD_KEG';\nexport const DELETE_KEG = 'DELETE_KEG';\nexport const SELL_KEG = 'SELL_KEG';","import React from 'react';\n\nfunction Footer(){\n  const footerStyles = {\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    width: '100vw',\n    backgroundColor: '#6C4660',\n    color: '#f6f6f2',\n    padding: '0.5%',\n    paddingLeft: '2%'\n  }\n\n  return(\n    <div style={footerStyles}>\n      <p>&copy; 2020 - Michelle Morin</p>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './Header.js';\nimport TapControl from './TapControl.js';\nimport Footer from './Footer.js';\n\nfunction App() {\n  const appStyles = {\n    fontFamily: \"'Montserrat', sans-serif\"\n  }\n\n  return (\n    <div style={appStyles}>\n      <Header />\n      <TapControl className=\"tap-control\" />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import formVisibleReducer from './form-visible-reducer';\nimport tapListReducer from './tap-list-reducer';\nimport selectedKegReducer from './selected-keg-reducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  masterKegList: tapListReducer,\n  formVisible: formVisibleReducer,\n  selectedKeg: selectedKegReducer\n});\n\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\n\nexport default (state = {}, action) => {\n  const { name, brewery, alcoholContent, ibu, price, pintQuantity, kegTappedDate, id } = action;\n  switch(action.type) {\n    case c.ADD_KEG:\n      return Object.assign({}, state, {\n        [id] : {\n          name: name,\n          brewery: brewery,\n          alcoholContent: alcoholContent,\n          ibu: ibu,\n          price: price,\n          pintQuantity: pintQuantity,\n          kegTappedDate: kegTappedDate,\n          id: id\n        }\n      });\n    case c.DELETE_KEG:\n      const newTapList = { ...state };\n      delete newTapList[id];\n      return newTapList;\n    case c.SELL_KEG:\n      const soldKegPintQuantity = state[id].pintQuantity - 1;\n      const updatedTapList = { ...state, [id]: { ...state[id], pintQuantity: soldKegPintQuantity }};\n      return updatedTapList;\n    default:\n      return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = false, action) => {\n  switch(action.type) {\n    case c.TOGGLE_FORM:\n      return !state;\n    default:\n      return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = null, action) => {\n  const { name, brewery, alcoholContent, ibu, price, pintQuantity, kegTappedDate, id } = action;\n  switch(action.type) {\n    case c.CHANGE_SELECTED:\n      const newState = {\n        name: name,\n        brewery: brewery,\n        alcoholContent: alcoholContent,\n        ibu: ibu,\n        price: price,\n        pintQuantity: pintQuantity,\n        kegTappedDate: kegTappedDate,\n        id: id\n      };\n      return newState;\n    case c.UNSELECT_KEG:\n      return null;\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}